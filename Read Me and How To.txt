Indigo -> InfluxDB -> Grafana

This is not "How YOU do it" - this is "How I did it" - your world might not line up with mine, but I suspect it does.

# =====
# Before starting
# install/license Indigo 7
# install homebrew, but I've had it for years

brew update
# use https://github.com/Homebrew/homebrew-services
brew tap homebrew/services

# =====
# install InfluxDB on my mac
brew install influxdb

# did it work?
which influx && echo "Installed!"
which influx && brew services start influxdb

# teach influx that I'm going to be putting things in from indigo
# the plugin creates the database if required. Just need a user.
# copy-paste the next 4 lines all at once and hit return after the EOF line
influx <<EOF
CREATE USER indigo WITH PASSWORD 'indigo'
GRANT ALL PRIVILEGES TO indigo
EOF

# who thought THIS LIST was a great idea?
alias indigoinflux="influx -host localhost -port 8086 -username indigo -password indigo" -database indigo

indigoinflux -execute 'select * from device_changes'
# no error, no output - after all, I just created it

# =====
# configure Indigo
# 1. Download InfluxDB and/or Kafka Producer modules
# 2. Run the script install_python_modules.sh and restart the Indigo server process. 
#    THIS REALLY HAS TO BE DONE BEFORE INSTALLING THE PLUGINS, which is why it's earlier than step 3.
#    Stop and restart the indigo server from the UI so it can learn about the new modules. 
#    I hate this step, but there you go. 
# 3. Install the module(s) by double-clicking. They are independent, pick the one you want.
# 4. Configure the hostname/user/pass/ports etc. For me the defaults for the local system are already set.
# 5. go get a drink, turning switches on and off along the way, setting off motion sensors, opening doors, and generally being disruptive. 

indigoinflux -execute 'select * from device_changes' | wc -l
# anything bigger than about 2 shows data is going in. WIN!
# if not, check the indigo log for hints. suspect user name/password, the port, newer versions of indigo than I wrote this for, needing a different version of the python modules, etc.

# =====
# install Grafana on my mac
brew install grafana
brew services start grafana

# boostrap: user admin pass admin - they really need to tell you that better from the brew install
open http://localhost:3000
# use the "login" tab

# create whatever users, passwords, and logins you want
# since I plan to visit Grafana from other systems, I learned not to use localhost as the data source hostname - use IP, bonjour name (something.local.), or resolvable hostname. Use the "proxy" option, it's not what I expected, it makes the server do all the work.
# start creating dashboards. which I'm not good at apparently. They have docs, I have them open a lot. 

# to see the raw data:
indigoinflux -execute 'select * from device_changes' > /tmp/raw_device_data.txt
vim /tmp/raw_device_data.txt
# in vim, ":set nowrap" so it's more table-ish

# =====
# marvel at the many many things you can't think of to make charts from

# =====

